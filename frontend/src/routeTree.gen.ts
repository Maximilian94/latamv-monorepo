/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as CreateAccountImport } from './routes/create-account'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthMainImport } from './routes/_auth.main'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CreateAccountRoute = CreateAccountImport.update({
  path: '/create-account',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthMainRoute = AuthMainImport.update({
  path: '/main',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/create-account': {
      id: '/create-account'
      path: '/create-account'
      fullPath: '/create-account'
      preLoaderRoute: typeof CreateAccountImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/main': {
      id: '/_auth/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof AuthMainImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthMainRoute: typeof AuthMainRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthMainRoute: AuthMainRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AuthRouteWithChildren
  '/create-account': typeof CreateAccountRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/main': typeof AuthMainRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AuthRouteWithChildren
  '/create-account': typeof CreateAccountRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/main': typeof AuthMainRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteWithChildren
  '/create-account': typeof CreateAccountRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/_auth/main': typeof AuthMainRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/create-account' | '/login' | '/about' | '/main'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/create-account' | '/login' | '/about' | '/main'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/create-account'
    | '/login'
    | '/about'
    | '/_auth/main'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
  CreateAccountRoute: typeof CreateAccountRoute
  LoginRoute: typeof LoginRoute
  AboutLazyRoute: typeof AboutLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
  CreateAccountRoute: CreateAccountRoute,
  LoginRoute: LoginRoute,
  AboutLazyRoute: AboutLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/create-account",
        "/login",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/main"
      ]
    },
    "/create-account": {
      "filePath": "create-account.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_auth/main": {
      "filePath": "_auth.main.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
