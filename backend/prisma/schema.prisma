// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Route {
  id                  String   @id @default(uuid())
  weekday             String
  flight_number       String
  aircraft_model_code String
  departure_icao      String
  eobt                String
  speed               String
  flight_level        String
  route               String
  arrival_icao        String
  eet                 String
  rmk                 String
  updated_at          DateTime @updatedAt
  available           Boolean  @default(true)

  aircraft_model AircraftModel @relation(fields: [aircraft_model_code], references: [code])
  flights        Flight[]
}

model AircraftModel {
  model        String
  code         String @id
  manufacturer String

  Route     Route[]
  aircrafts Aircraft[]
}

model FlightDuty {
  id                   Int      @id @default(autoincrement())
  createdAt            DateTime
  expirationDate       DateTime
  userId               Int
  aircraftRegistration String

  user     User     @relation(fields: [userId], references: [id])
  flights  Flight[]
  aircraft Aircraft @relation(fields: [aircraftRegistration], references: [registration])
}

model Flight {
  id                   Int    @id @default(autoincrement())
  flightDutyId         Int
  routeId              String
  userId               Int
  aircraftRegistration String

  user       User       @relation(fields: [userId], references: [id])
  flightDuty FlightDuty @relation(fields: [flightDutyId], references: [id])
  route      Route      @relation(fields: [routeId], references: [id])
  aircraft   Aircraft   @relation(fields: [aircraftRegistration], references: [registration])
}

model Role {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  users    User[]     @relation("UserRoles")
  UserRole UserRole[]
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  username String @unique
  password String

  roles        Role[]       @relation("UserRoles")
  UserRole     UserRole[]
  flights      Flight[]
  flightDuties FlightDuty[]
}

model UserRole {
  userId Int
  roleId Int

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Aircraft {
  registration      String  @id @db.VarChar(255)
  type              String
  engine            String
  active            Boolean
  aircraftModelCode String
  available         Boolean @default(true)

  aircraftModel AircraftModel @relation(fields: [aircraftModelCode], references: [code])
  Flight        Flight[]
  FlightDuty    FlightDuty[]
}
